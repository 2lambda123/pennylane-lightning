name: Build cached libs
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  kokkos_libs:
    name: Kokkos core & kernels
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container_img }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        exec_model: [SERIAL, OPENMP, THREADS]
        kokkos_version: ["3.6.00"]
        container_img: ["ubuntu:20.04", "quay.io/pypa/manylinux2014_x86_64"]
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}

      - name: Install dependencies (Ubuntu)
        if: ${{ matrix.container_img }} == "ubuntu-20.04"
        run: apt-get update && apt-get -y -q install cmake gcc-10 g++-10 ccache ninja-build

      - name: Install dependencies (CentOS)
        if: ${{ matrix.container_img}} == "quay.io/pypa/manylinux2014_x86_64"
        run: yum update && yum install -y cmake ccache ninja-build

      - name: Clone Kokkos libs
        run: |
          pushd . &> /dev/null
          git clone https://github.com/kokkos/kokkos.git
          cd kokkos 
          git checkout ${{ matrix.kokkos_version }}
          popd &> /dev/null

          pushd . &> /dev/null
          git clone https://github.com/kokkos/kokkos-kernels.git
          cd kokkos-kernels
          git checkout ${{ matrix.kokkos_version }}
          popd &> /dev/null

      - name: Cache installation directories
        id: kokkos-cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/install_dir/${{ matrix.exec_model }}
            $HOME/.ccache
          key: ${{ matrix.container_img }}-kokkos${{ matrix.kokkos_version }}-${{ matrix.exec_model }}

      - name: Build Kokkos core library
        if: steps.kokkos-cache.outputs.cache-hit != 'true'
        run: |
          pushd . &> /dev/null
          mkdir -p ${{ github.workspace }}/install_dir/${{ matrix.exec_model }}
          cd kokkos
          cmake -BBuild . -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/install_dir/${{ matrix.exec_model }} \
                          -DKokkos_ENABLE_COMPLEX_ALIGN=off \
                          -DKokkos_ENABLE_${{ matrix.exec_model }}=ON \
                          -DCMAKE_CXX_COMPILER=g++-10 \
                          -DCMAKE_CXX_STANDARD=20 \
                          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
                          -G Ninja

          cmake --build ./Build --verbose
          cmake --install ./Build
          popd &> /dev/null

      - name: Build Kokkos kernels library
        if: steps.kokkos-cache.outputs.cache-hit != 'true'
        run: |
          pushd . &> /dev/null
          mkdir -p ${{ github.workspace }}/install_dir/${{ matrix.exec_model }}
          cd kokkos-kernels
          cmake -BBuild . -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/install_dir/${{ matrix.exec_model }} \
                          -DKokkos_ENABLE_${{ matrix.exec_model }}=ON \
                          -DCMAKE_CXX_COMPILER=g++-10 \
                          -DCMAKE_CXX_STANDARD=20 \
                          -DKokkos_DIR=$PWD/../install_dir/${{ matrix.exec_model }} \
                          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
                          -G Ninja
          cmake --build ./Build --verbose
          cmake --install ./Build
          popd &> /dev/null

