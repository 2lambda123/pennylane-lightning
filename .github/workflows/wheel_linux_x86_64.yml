name: Wheel::Linux::x86_64
on:
  release:
    types: [published]
  push:
    branches:
      - master
  pull_request:

env:
  CIBW_BUILD: 'cp37-* cp38-* cp39-* cp310-*'
  CIBW_SKIP: "*-musllinux*"

  # Python build settings
  CIBW_BEFORE_BUILD: |
    pip install pybind11 ninja cmake && yum install -y gcc gcc-c++

  # Testing of built wheels
  CIBW_TEST_REQUIRES: numpy~=1.21 scipy pytest pytest-cov pytest-mock flaky

  CIBW_BEFORE_TEST: |
    pip install git+https://github.com/PennyLaneAI/pennylane.git@master

  CIBW_TEST_COMMAND: |
    pl-device-test --device=lightning.qubit --skip-ops -x --tb=short --no-flaky-report

  CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014

  KOKKOS_INC: kokkos_install_dir/include
  KOKKOS_LIB: kokkos_install_dir/lib

jobs:
  kokkos_libs:
    name: Kokkos core & kernels
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container_img }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        exec_model: [SERIAL, OPENMP, THREADS]
        kokkos_version: ["3.6.00"]
        container_img: ["quay.io/pypa/manylinux2014_x86_64"]
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}

      - name: Cache installation directories
        id: kokkos-cache
        uses: actions/cache@v3
        with:
          path: |
            /root/install_dir/${{ matrix.exec_model }}
            /root/.ccache
          key: ${{ matrix.container_img }}-kokkos${{ matrix.kokkos_version }}-${{ matrix.exec_model }}

      - name: Install dependencies (Ubuntu)
        if: ${{ matrix.container_img == 'ubuntu:20.04' }}
        run: |
          apt-get update && DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get -y -q install cmake gcc-10 g++-10 ccache ninja-build git
          echo "COMPILER=g++-10" >> $GITHUB_ENV

      - name: Install dependencies (CentOS)
        if: ${{ matrix.container_img == 'quay.io/pypa/manylinux2014_x86_64' }}
        run: |
          yum update && yum install -y cmake ccache ninja-build
          echo "COMPILER=g++" >> $GITHUB_ENV

      - name: Clone Kokkos libs
        run: |
          git clone https://github.com/kokkos/kokkos.git
          cd kokkos 
          git checkout ${{ matrix.kokkos_version }}
          cd -

          pushd . &> /dev/null
          git clone https://github.com/kokkos/kokkos-kernels.git
          cd kokkos-kernels
          git checkout ${{ matrix.kokkos_version }}
          cd -

      - name: Build Kokkos core library
        if: steps.kokkos-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p /root/install_dir/${{ matrix.exec_model }}
          cd kokkos
          cmake -BBuild . -DCMAKE_INSTALL_PREFIX=/root/install_dir/${{ matrix.exec_model }} \
                          -DKokkos_ENABLE_COMPLEX_ALIGN=off \
                          -DKokkos_ENABLE_${{ matrix.exec_model }}=ON \
                          -DCMAKE_CXX_COMPILER=${{ env.COMPILER }} \
                          -DCMAKE_CXX_STANDARD=20 \
                          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
                          -G Ninja

          cmake --build ./Build --verbose
          cmake --install ./Build
          cd -

      - name: Build Kokkos kernels library
        if: steps.kokkos-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p /root/install_dir/${{ matrix.exec_model }}
          cd kokkos-kernels
          cmake -BBuild . -DCMAKE_INSTALL_PREFIX=/root/install_dir/${{ matrix.exec_model }} \
                          -DKokkos_ENABLE_${{ matrix.exec_model }}=ON \
                          -DCMAKE_CXX_COMPILER=${{ env.COMPILER }} \
                          -DCMAKE_CXX_STANDARD=20 \
                          -DKokkos_DIR=$PWD/../install_dir/${{ matrix.exec_model }} \
                          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
                          -G Ninja
          cmake --build ./Build --verbose
          cmake --install ./Build

  linux-wheels-x86-64:
    needs: kokkos_libs
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        arch: [x86_64]
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}

      - name: Cache installation directories
        id: kokkos-cache
        uses: actions/cache@v3
        with:
          path: |
            ./kokkos_install_dir
          key: quay.io/pypa/manylinux2014_x86_64-kokkos3.6.00-OPENMP
          restore-keys: |
            quay.io/pypa/manylinux2014_x86_64-kokkos3.6.00-THREADS
            quay.io/pypa/manylinux2014_x86_64-kokkos3.6.00-SERIAL

      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.3.0

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS_LINUX: ${{matrix.arch}}         

      - uses: actions-ecosystem/action-regex-match@v2
        id: rc_build
        with:
          text: ${{ github.event.pull_request.head.ref }}
          regex: '.*[0-9]+.[0-9]+.[0-9]+[-_]?rc[0-9]+'

      - uses: actions/upload-artifact@v2
        #if: ${{ github.event_name == 'release' || github.ref == 'refs/heads/master' || steps.rc_build.outputs.match != ''}}
        with:
          name: ${{ runner.os }}-wheels-${{ matrix.arch }}.zip
          path: ./wheelhouse/*.whl

  upload-pypi:
    needs: linux-wheels-x86-64
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'release' || github.ref == 'refs/heads/master'}}
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: Linux-wheels-x86_64.zip
          path: dist

      - name: Upload wheels to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
